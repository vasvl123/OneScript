using System;
using ScriptEngine.HostedScript;
using ScriptEngine.HostedScript.Library;

namespace starter
{

    public class ApplicationHost : IHostApplication
    {
        public string[] CommandLineArguments { get; set; } = new string[0];

        public void Echo(string text, MessageStatusEnum status = MessageStatusEnum.Ordinary)
        {
            ConsoleHostImpl.Echo(text, status);
        }

        public void ShowExceptionInfo(Exception exc)
        {
            ConsoleHostImpl.ShowExceptionInfo(exc);
        }

        public bool InputString(out string result, int maxLen)
        {
            return ConsoleHostImpl.InputString(out result, maxLen);
        }

        public string[] GetCommandLineArguments()
        {
            return CommandLineArguments;
        }
    }

    class starter : functions
    {
        string Хост;
        Соответствие Контроллеры;
        bool Локальный;
        string mono;
        Перем showdata;
        Массив Соединения;
        Массив мЗадачи;

        public bool ЗапуститьПроцесс(string Имя, Перем Порт, string Параметры = "")
        {
            try
            {
                Сообщить("Запуск " + Имя + " ...");
                // Проверка свободного порта
                TCPСервер Сервер = Новый_TCPСервер(Порт);
                Сервер.Запустить();
                Сервер.Остановить();
                ЗапуститьПриложение(mono + "uascript.exe " + Имя + " " + Порт + " " + Параметры, ТекущийКаталог());
                Приостановить(200); // ???
            }
            catch
            {
                //Сообщить(ОписаниеОшибки());
                return Ложь;
            }
            return Истина;
        } // ЗапуститьПроцесс()

        public void Main()
        {

            Хост = "127.0.0.1";

            int Порт = 8890;
            int ПортЗ = 8888;
            int ПортВ = 8889;
            int ПортД = 8887;
            int ПортМ = 8886;
            int НовыйПортК = ПортМ;

            string ПараметрХост = " ";

            Контроллеры = Новый_Соответствие();
            Соединения = Новый_Массив();
            Локальный = Истина;
            мЗадачи = Новый_Массив();
            mono = "";
            var си = Новый_СистемнаяИнформация();
            if (Лев(си.ВерсияОС, 4) == "Unix")
            {
                mono = "mono ";
            }
            if (АргументыКоманднойСтроки.Количество())
            {
                Локальный = (!АргументыКоманднойСтроки[0] = "site");
                if (!Локальный)
                {
                    ПортЗ = АргументыКоманднойСтроки[1];
                    Сообщить("Режим сайта, порт " + ПортЗ);
                    ПараметрХост = "";
                }
            }
            var Таймаут = 5;
            var TCPСервер = Новый_TCPСервер(Число(Порт));
            TCPСервер.ЗапуститьАсинхронно();
            Сообщить("Стартер запущен на порту: " + Порт);
            мЗадачи.Добавить(Новый_Структура("Запущен, ДанныеВходящие", new object[] { Ложь, Новый_Структура("cmd", "startweb") }));
            мЗадачи.Добавить(Новый_Структура("Запущен, ДанныеВходящие", new object[] { Ложь, Новый_Структура("cmd", "showdata") }));
            мЗадачи.Добавить(Новый_Структура("Запущен, ДанныеВходящие", new object[] { Ложь, Новый_Структура("cmd", "startdata") }));
            мЗадачи.Добавить(Новый_Структура("Запущен, ДанныеВходящие", new object[] { Ложь, Новый_Структура("cmd", "startmorph") }));
            var ЗавершитьПроцесс = Ложь;
            var ПерезапуститьПроцесс = Ложь;
            var ПустойЦикл = 0;
            while (!ЗавершитьПроцесс) do
            {
                var НачалоЦикла = ТекущаяУниверсальнаяДатаВМиллисекундах();
                var к = мЗадачи.Количество();
                while (к > 0 && !(ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЦикла > 50)) do
                {
                    к = к - 1;
                    var структЗадача = мЗадачи.Получить(0);
                    мЗадачи.Удалить(0);
                    var ДанныеВходящие = структЗадача.ДанныеВходящие;
                    var cmd = ДанныеВходящие.cmd;
                    if (cmd == "startproc")
                    {
                        if (showdata != Неопределено) {
                            if (Контроллеры.Получить(ДанныеВходящие.procid) = Неопределено)
                            {
                                ПортК = showdata;
                                showdata = null;
                                стрКонтроллер = Новый Структура("procid, Хост, Порт, ПортС, ПортВ, ПортД, ПортМ, УдаленныйУзел, Локальный, ПараметрХост, cmd", ДанныеВходящие.procid, Хост, ПортК, Порт, ПортВ, ПортД, ПортМ, "", Локальный, ПараметрХост, "init");
                                while (ПередатьДанные(Хост, ПортК, стрКонтроллер) == Неопределено) do
                                    {
                                        Сообщить("Ошибка передачи параметров процессу.");
                                        Приостановить(50);
                                    }

                                Контроллеры.Вставить(ДанныеВходящие.procid, стрКонтроллер);
                                break;
                            }
                        }
                        else if (cmd = "termproc")
                        {
                            if (ДанныеВходящие.Свойство("procid"))
                            {
                                элКонтроллер = Контроллеры.Получить(ДанныеВходящие.procid);
                                if (НЕ элКонтроллер = Неопределено) {
                                    Контроллеры.Удалить(ДанныеВходящие.procid);
                                }
                                continue;
                            }
                        }
                        else if (cmd = "startmorph")
                        {
                            if (структЗадача.Запущен = Ложь)
                            {
                                структЗадача.Запущен = ЗапуститьПроцесс("morphserver.os", ПортМ);
                            }
                            else
                            {
                                continue;
                            }
                        }
                        else if (cmd = "startdata")
                        {
                            if (структЗадача.Запущен = Ложь)
                            {
                                структЗадача.Запущен = ЗапуститьПроцесс("dataserver.os", ПортД);
                            }
                            else
                            {
                                continue;
                            }
                        }
                        else if (cmd = "startweb")
                        {
                            if (структЗадача.Запущен = Ложь)
                            {
                                структЗадача.Запущен = ЗапуститьПроцесс("webserver.os", ПортВ, ПортЗ);
                            }
                            else
                            {
                                if (НЕ ПередатьДанные(Хост, ПортВ, Новый Структура("Хост, Порт, ПортС, ПортД, cmd", Хост, ПортВ, Порт, ПортД, "init")) = Неопределено) {
                                    Приостановить(50);
                                    continue;
                                }
                            }
                        }
                        else if (cmd = "showdata")
                        {
                            if (showdata = Неопределено)
                            {
                                if (НовыйПортК < 5555)
                                {
                                    НовыйПортК = ПортМ;
                                }
                                НовыйПортК = НовыйПортК - 1;
                                while (НЕ ЗапуститьПроцесс("showdata.os", НовыйПортК)) do
                                {
                                    НовыйПортК = НовыйПортК - 1;
                                }

                                showdata = НовыйПортК;
                            }
                        }
                        else if (cmd = "stopserver" ИЛИ cmd = "restartserver") {
                            if (Локальный)
                            {
                                foreach (элКонтроллер in Контроллеры) do
                                    {
                                        ПередатьДанные(элКонтроллер.Значение.Хост, элКонтроллер.Значение.Порт, Новый Структура("cmd, taskid", "termproc", "0"));
                                    }

                if (НЕ showdata = Неопределено) {
                                    ПередатьДанные(Хост, showdata, Новый Структура("cmd, taskid", "termproc", "0"));
                                }
                                if (cmd = "restartserver")
                                {
                                    ПерезапуститьПроцесс = Истина;
                                }
                                ЗавершитьПроцесс = Истина;
                            }
                            else
                            {
                                if (ДанныеВходящие.Свойство("procid"))
                                {
                                    элКонтроллер = Контроллеры.Получить(ДанныеВходящие.procid);
                                    if (НЕ элКонтроллер = Неопределено) {
                                        ПередатьДанные(элКонтроллер.Хост, элКонтроллер.Порт, Новый Структура("cmd, taskid", "termproc", "0"));
                                    }
                                }
                            }
                            continue;
                        }
                    }
                    мЗадачи.Добавить(структЗадача);
                }

                Соединение = TCPСервер.ПолучитьСоединение(Таймаут);
                if (НЕ Соединение = Неопределено) {
                    Соединения.Вставить(0, Соединение);
                    Таймаут = 5;
                }
                к = Соединения.Количество();
                while (к > 0) do
                    {
                        к = к - 1;
                        Соединение = Соединения.Получить(0);
                        Соединения.Удалить(0);
                        if (Соединение.Статус = "Данные")
                        {
                            try
                            {
                                ДанныеВходящие = Неопределено;
                                ДанныеВходящие = ДвоичныеДанныеВСтруктуру(Соединение.ПолучитьДвоичныеДанные());
                            }
                            catch
                            {
                                Сообщить("starter: " + ОписаниеОшибки());
                            }
                            if (ДанныеВходящие = Неопределено)
                            {
                                continue;
                            }
                            if (ДанныеВходящие.Свойство("cmd"))
                            {
                                Сообщить("starter: " + cmd);
                                мЗадачи.Добавить(Новый Структура("ДанныеВходящие", ДанныеВходящие));
                            }
                            Соединение.Закрыть();
                            continue;
         else if (Соединение.Статус = "Ошибка")
                            {
                                Соединение.Закрыть();
                                continue;
                            }
                        }
                        else
                        {
                            ПустойЦикл = ПустойЦикл + 1;
                        }
                        Соединения.Добавить(Соединение);
                    }

                ВремяЦикла = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЦикла;
                if (ВремяЦикла > 100)
                {
                    Сообщить("!starter ВремяЦикла=" + ВремяЦикла);
                }
                if (Таймаут < 50)
                {
                    Таймаут = Таймаут + 1;
                }
            }
if (Контроллеры.Количество())
            {
                Сообщить("Не все контроллеры завершили работу.");
                Приостановить(200);
            }
            TCPСервер.Остановить();
            с1 = ПередатьДанные(Хост, ПортМ, Новый Структура("cmd", "stopserver"));
            с2 = ПередатьДанные(Хост, ПортВ, Новый Структура("cmd", "stopserver"));
            с3 = ПередатьДанные(Хост, ПортД, Новый Структура("cmd", "stopserver"));
            while (с1.Статус = "Занят" ИЛИ с2.Статус = "Занят" ИЛИ с3.Статус = "Занят") do
            {
                Приостановить(50);
            }
if (ПерезапуститьПроцесс)
            {
                Сообщить("Перезапуск");
                ЗапуститьПроцесс("starter.os", Порт);
            }
            Сообщить("Процесс starter завершен.");
        }


    }

    class MainClass
    {

        public static void Main(string[] args)
        {

            var app = new starter();
            app._syscon = new SystemGlobalContext();
            app._syscon.ApplicationHost = new ApplicationHost();
            app.Main();

        }
    }
}
